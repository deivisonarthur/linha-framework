//
// FUNCTIONS
//
// Compacta uma lista de itens em uma string só
// É diferente de zip porque aqui checa os valores
// @param string $n...
// @param boolean $comma
// @return string
//
@function compact(
	$n1: false, $n2: false, $n3: false,
	$n4: false, $n5: false, $n6: false,
	$n7: false, $n8: false, $n9: false,
	$comma: true
) {

	$compact: $n1;

	@each $item in $n2, $n3, $n4, $n5, $n6, $n7, $n8, $n9 {

		@if $item != false {

			$insert: $item;

			@if $comma != false {
				$insert: unquote(',') $item;
			}

			$compact: $compact $insert;
		}
	}

	@return $compact;
}

// BACKGROUND-CLIP
@mixin background-clip( $clip: border-box ){

	$clip: unquote($clip);
  	$deprecated: $clip;
  	@if $clip == padding-box { $deprecated: padding; }
  	@if $clip == border-box { $deprecated: border; }

	-webkit-background-clip: $deprecated;
	-moz-background-clip: $deprecated;
	-ms-background-clip: $clip;
	-o-background-clip: $clip;
	background-clip: $clip;
}

// BACKGROUND-ORIGIN
@mixin background-origin( $origin: padding-box ){

	$origin: unquote($origin);
	$deprecated: $origin;
	@if $origin == padding-box { $deprecated: padding; }
	@if $origin == border-box  { $deprecated: border;  }
	@if $origin == content-box { $deprecated: content; }

	-webkit-background-origin: $deprecated;
	-moz-background-origin: $deprecated;
	-ms-background-origin: $origin;
	-o-background-origin: $origin;
	background-origin: $origin;
}

// BACKGROUND-SIZE
@mixin background-size(
	$size1,
	$size2: false, $size3: false,
	$size4: false, $size5: false,
	$size6: false, $size7: false,
	$size8: false, $size9: false
) {

    $full: compact($size1, $size2, $size3, $size4,
                   $size5, $size6, $size7, $size8, $size9);

	-webkit-background-size: $full;
    -moz-background-size: $full;
    -ms-background-size: $full;
    -o-background-size: $full;
    background-size: $full;
}

// BORDER-RADIUS
@mixin border-radius ($radius) {
  	-webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    -o-border-radius: $radius;
    border-radius: $radius;
}

@mixin border-top-left-radius($radius) {
  	-webkit-border-top-left-radius: $radius;
    -moz-border-top-left-radius: $radius;
    -ms-border-top-left-radius: $radius;
    -o-border-top-left-radius: $radius;
    border-top-left-radius: $radius;
}

@mixin border-top-right-radius($radius) {
	-webkit-border-top-right-radius: $radius;
    -moz-border-top-right-radius: $radius;
    -ms-border-top-right-radius: $radius;
    -o-border-top-right-radius: $radius;
    border-top-right-radius: $radius;
}

@mixin border-bottom-left-radius($radius) {
	-webkit-border-bottom-left-radius: $radius;
    -moz-border-bottom-left-radius: $radius;
    -ms-border-bottom-left-radius: $radius;
    -o-border-bottom-left-radius: $radius;
    border-bottom-left-radius: $radius;
}

@mixin border-bottom-right-radius($radius) {
	-webkit-border-bottom-right-radius: $radius;
    -moz-border-bottom-right-radius: $radius;
    -ms-border-bottom-right-radius: $radius;
    -o-border-bottom-right-radius: $radius;
    border-bottom-right-radius: $radius;
}

@mixin border-top-radius($radius) {
	@include border-top-left-radius($radius);
	@include border-top-right-radius($radius);
}

@mixin border-right-radius($radius) {
	@include border-top-right-radius($radius);
	@include border-bottom-right-radius($radius);
}

@mixin border-bottom-radius($radius) {
	@include border-bottom-left-radius($radius);
	@include border-bottom-right-radius($radius);
}

@mixin border-left-radius($radius) {
	@include border-top-left-radius($radius);
	@include border-bottom-left-radius($radius);
}

// BOX-SHADOW
@mixin box-shadow(
	$shadow1,
	$shadow2: false, $shadow3: false,
	$shadow4: false, $shadow5: false,
	$shadow6: false, $shadow7: false,
	$shadow8: false, $shadow9: false
) {

    $full: compact($shadow1, $shadow2, $shadow3, $shadow4,
                   $shadow5, $shadow6, $shadow7, $shadow8, $shadow9);

	-webkit-box-shadow: $full;
    -moz-box-shadow: $full;
    -ms-box-shadow: $full;
    -o-box-shadow: $full;
    box-shadow: $full;
}

// BOX-SIZING
@mixin box-sizing($value: border-box){
	-webkit-box-sizing: $value;
	-moz-box-sizing: $value;
	-ms-box-sizing: $value;
	-o-box-sizing: $value;
	box-sizing: $value;
}

// FONT-FACE
@mixin font-face($name, $url){
	@font-face {
		font-family: unquote($name);
		src: url($url + '.eot');
		src: local(quote($name)),
			 url($url + '.eot?#iefix') format('embedded-opentype'),
			 url($url + '.woff') format('woff'),
			 url($url + '.ttf') format('truetype'),
			 url($url + '.svg#' + $name) format('svg');
		font-weight: normal;
		font-style: normal;
	}
}

// OPACITY
@mixin opacity($value: 1){
	-webkit-opacity: $value;
	-moz-opacity: $value;
	-ms-opacity: $value;
	-o-opacity: $value;
	opacity: $value;
	filter: alpha(opacity=$value*100);
}

// TRANSFORM
@mixin transform($property: none) {
	-webkit-transform: $property;
    -moz-transform: $property;
    -ms-transform: $property;
    -o-transform: $property;
    transform: $property;
}

@mixin transform-origin($axes: 50%) {
	-webkit-transform-origin: $axes;
    -moz-transform-origin: $axes;
    -ms-transform-origin: $axes;
    -o-transform-origin: $axes;
    transform-origin: $axes;
}


// TRANSITION
@mixin transition (
	$property: all,
	$duration: 0.15s,
	$timing-function: ease-out,
	$delay: 0
) {

	// Detecta o número de argumentos de cada variável
	$length-of-property: length($property);
	$length-of-duration: length($duration);
	$length-of-timing-function: length($timing-function);
	$length-of-delay: length($delay);

	@if $length-of-property > 1 {
		@include transition-property( zip($property) );
	} @else {
		@include transition-property( $property );
	}

	@if $length-of-duration > 1 {
		@include transition-duration( zip($duration) );
	} @else {
		@include transition-duration( $duration );
	}

	@if $length-of-timing-function > 1 {
		@include transition-timing-function( zip($timing-function) );
	} @else {
		@include transition-timing-function( $timing-function );
	}

	@if $length-of-delay > 1 {
		@include transition-delay( zip($delay) );
	} @else {
		@include transition-delay( $delay );
	}
}


@mixin transition-property (
	$prop1: all,
	$prop2: false, $prop3: false,
	$prop4: false, $prop5: false,
	$prop6: false, $prop7: false,
	$prop8: false, $prop9: false
) {

	$full: compact($prop1, $prop2, $prop3, $prop4, $prop5,
				$prop6, $prop7, $prop8, $prop9);

	-webkit-transition-property: $full;
	-moz-transition-property: $full;
	-ms-transition-property: $full;
	-o-transition-property: $full;
	transition-property: $full;

}

@mixin transition-duration (
	$time1: 0,
	$time2: false, $time3: false,
	$time4: false, $time5: false,
	$time6: false, $time7: false,
	$time8: false, $time9: false
) {

	$full: compact($time1, $time2, $time3, $time4, $time5,
				$time6, $time7, $time8, $time9);

	-webkit-transition-duration: $full;
	-moz-transition-duration: $full;
	-ms-transition-duration: $full;
	-o-transition-duration: $full;
	transition-duration: $full;
}

@mixin transition-timing-function (
	$motion1: ease,
	$motion2: false, $motion3: false,
	$motion4: false, $motion5: false,
	$motion6: false, $motion7: false,
	$motion8: false, $motion9: false
){

	$full: compact($motion1, $motion2, $motion3, $motion4, $motion5,
				$motion6, $motion7, $motion8, $motion9);

	// ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()
	-webkit-transition-timing-function: $full;
	-moz-transition-timing-function: $full;
	-ms-transition-timing-function: $full;
	-o-transition-timing-function: $full;
	transition-timing-function: $full;
}

@mixin transition-delay (
	$time1: 0,
	$time2: false, $time3: false,
	$time4: false, $time5: false,
	$time6: false, $time7: false,
	$time8: false, $time9: false
) {

	$full: compact($time1, $time2, $time3, $time4, $time5,
				$time6, $time7, $time8, $time9);

	-webkit-transition-delay: $full;
	-moz-transition-delay: $full;
	-ms-transition-delay: $full;
	-o-transition-delay: $full;
	transition-delay: $full;
}